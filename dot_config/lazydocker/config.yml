gui:
  scrollHeight: 2
  language: "en"
  border: "rounded"
  theme:
    activeBorderColor:
      - "#89b4fa"
      - bold
    inactiveBorderColor:
      - "#585b70"
    selectedLineBgColor:
      - "#89b4fa"
    optionsTextColor:
      - "#fab387"
  returnImmediately: false
  wrapMainPanel: true
  sidePanelWidth: 0.333
  showBottomLine: true
  expandFocusedSidePanel: true
  screenMode: "normal"
  containerStatusHealthStyle: "long"
logs:
  timestamps: false
  since: "60m"
  tail: ""
commandTemplates:
  dockerCompose: docker compose
  restartService: "{{ .DockerCompose }} restart {{ .Service.Name }}"
  up: "{{ .DockerCompose }} up -d"
  down: "{{ .DockerCompose }} down"
  downWithVolumes: "{{ .DockerCompose }} down --volumes"
  upService: "{{ .DockerCompose }} up -d {{ .Service.Name }}"
  startService: "{{ .DockerCompose }} start {{ .Service.Name }}"
  stopService: "{{ .DockerCompose }} stop {{ .Service.Name }}"
  serviceLogs: "{{ .DockerCompose }} logs --since=60m --follow {{ .Service.Name }}"
  viewServiceLogs: "{{ .DockerCompose }} logs --follow {{ .Service.Name }}"
  rebuildService: "{{ .DockerCompose }} up -d --build {{ .Service.Name }}"
  recreateService: "{{ .DockerCompose }} up -d --force-recreate {{ .Service.Name }}"
  allLogs: "{{ .DockerCompose }} logs --tail=300 --follow"
  viewAlLogs: "{{ .DockerCompose }} logs"
  dockerComposeConfig: "{{ .DockerCompose }} config"
  checkDockerComposeConfig: "{{ .DockerCompose }} config --quiet"
  serviceTop: "{{ .DockerCompose }} top {{ .Service.Name }}"
oS:
  openCommand: open {{filename}}
  openLinkCommand: open {{link}}
stats:
  graphs:
    - caption: CPU (%)
      statPath: DerivedStats.CPUPercentage
      color: "#cba6f7"
    - caption: Memory (%)
      statPath: DerivedStats.MemoryPercentage
      color: "#f2cdcd"
